stream -> string // full text (sync)

[0]:a

stream
    split ' '
    ..(
        count 'a' += a;
    )

stream.
    filter{>50}
    filter{%2==0}
    [## > 0] (
        => #0;
        !> 0
    )

stream
    filter{>50}
    filter{%2==0}
    (## > 0) [
        => #0;
        !> 0
    ]

stream
    filter { > 50 }
    filter { % 2 == 0 }
    (
        => (## > 0) #0;
        !> (## > 0) 0
    )

a == b => #0
 (       )
a(==b=>)#0

stream
    filter { > 50 }
    filter { % 2 == 0 }
    (## > 0 [
        =>) #0;
        !>) 0
    ]

stream
    filter { > 50 }
    filter { % 2 == 0}
    (## > 0) [
        => #0;
        !> 0
    ]

stream
    filter > 50;
    filter % 2 == 0;
    (## > 0)(=> #0,!> 0)(writeline console)..

stream
    filter > 50;
        filter % 2 == 0;
        (=>(## > 0) #0, !>(## > 0) 0) writeline console
    .
        ## > 0 (=> #0, !> 0) writeline console

stream
    filter{> 50}
    (filter{% 2 == 0})(## > 0)(=>{#0},!>{0})(writeline console);
    (## > 0)(=>{#0},!>{0})(writeline console)..
stream
    filter{> 50}
    .filter{% 2 == 0}.##.> 0 .(=>{#0},!>{0}).writeline.console..

stream.
    filter{>50}.
    (filter{%2==0).##>0(=>))
    
stream
    filter{> 50}
    filter{% 2 == 0}
    (## > 0(
        => #0;
        !> 0
    ))..

socket|-#{
    
}